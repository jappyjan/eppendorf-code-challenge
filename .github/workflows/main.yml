name: Deploy to AWS
on:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2.5.2
        with:
          node-version-file: .nvmrc

      - name: CLI tools
        run: npm i -g nx@latest

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: node_modules install
        run: npm ci --force

      - name: Build
        run: nx run-many --target=build --all --parallel

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  Test_Unit:
    runs-on: ubuntu-latest
    environment: production
    needs: [Build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get cached node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: CLI tools
        run: npm i -g nx@latest

      - name: run unit tests
        run: nx run-many --target=test --all --parallel

  Deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: [Build, Test_Unit]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Get cached node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install cdktf
        run: npm i -g cdktf-cli@latest

      - name: terraform-cdk-action
        uses: hashicorp/terraform-cdk-action@v0.1.26
        with:
          stackName: backend frontend
          mode: auto-approve-apply
          terraformCloudToken: ${{ secrets.TERRAFORM_API_TOKEN }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
          AWS_REGION: ${{ vars.AWS_REGION }}
